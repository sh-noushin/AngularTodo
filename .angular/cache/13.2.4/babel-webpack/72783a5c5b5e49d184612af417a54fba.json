{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\online-teach\\\\Projects\\\\AngularTodo\\\\todo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { Category } from '../models/category-model';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.formData = new Category();\n    this.APIUrl = 'https://localhost:5001';\n    this._listeners = new Subject();\n  }\n\n  getCatList(filterText, skipCount, maxResultCount, sorting) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.get(_this.APIUrl + '/Categories?FilterText=' + filterText + '&SkipCount=' + skipCount + '&MaxReasultCount=' + maxResultCount + '&Sorting=' + sorting);\n    })();\n  }\n\n  addCategory(cat) {\n    return this.http.post(this.APIUrl + '/Categories', cat, {\n      responseType: 'text'\n    });\n  }\n\n  deleteCategory(id) {\n    return this.http.delete(this.APIUrl + '/Categories/' + id, {\n      responseType: 'text'\n    });\n  }\n\n  updateCategory(cat) {\n    this.http.put(this.APIUrl + '/Categories/' + cat.Id, cat, {\n      responseType: 'text'\n    }).subscribe(res => {});\n  }\n\n  listen() {\n    return this._listeners.asObservable();\n  }\n\n  filter(filterBy) {\n    this._listeners.next(filterBy);\n  }\n\n}\n\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["E:/online-teach/Projects/AngularTodo/todo/src/app/services/category.service.ts"],"names":["Category","Subject","i0","i1","CategoryService","constructor","http","formData","APIUrl","_listeners","getCatList","filterText","skipCount","maxResultCount","sorting","get","addCategory","cat","post","responseType","deleteCategory","id","delete","updateCategory","put","Id","subscribe","res","listen","asObservable","filter","filterBy","next","ɵfac","CategoryService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgB,IAAIP,QAAJ,EAAhB;AACA,SAAKQ,MAAL,GAAc,wBAAd;AACA,SAAKC,UAAL,GAAkB,IAAIR,OAAJ,EAAlB;AACH;;AACKS,EAAAA,UAAU,CAACC,UAAD,EAAaC,SAAb,EAAwBC,cAAxB,EAAwCC,OAAxC,EAAiD;AAAA;;AAAA;AAC7D,aAAO,KAAI,CAACR,IAAL,CAAUS,GAAV,CAAc,KAAI,CAACP,MAAL,GAAc,yBAAd,GAA0CG,UAA1C,GAAuD,aAAvD,GACjBC,SADiB,GACL,mBADK,GACiBC,cADjB,GACkC,WADlC,GACgDC,OAD9D,CAAP;AAD6D;AAGhE;;AACDE,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,WAAO,KAAKX,IAAL,CAAUY,IAAV,CAAe,KAAKV,MAAL,GAAc,aAA7B,EAA4CS,GAA5C,EAAiD;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KAAjD,CAAP;AACH;;AACDC,EAAAA,cAAc,CAACC,EAAD,EAAK;AACf,WAAO,KAAKf,IAAL,CAAUgB,MAAV,CAAiB,KAAKd,MAAL,GAAc,cAAd,GAA+Ba,EAAhD,EAAoD;AAAEF,MAAAA,YAAY,EAAE;AAAhB,KAApD,CAAP;AACH;;AACDI,EAAAA,cAAc,CAACN,GAAD,EAAM;AAChB,SAAKX,IAAL,CAAUkB,GAAV,CAAc,KAAKhB,MAAL,GAAc,cAAd,GAA+BS,GAAG,CAACQ,EAAjD,EAAqDR,GAArD,EAA0D;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KAA1D,EAAoFO,SAApF,CAA8FC,GAAG,IAAI,CACpG,CADD;AAEH;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKnB,UAAL,CAAgBoB,YAAhB,EAAP;AACH;;AACDC,EAAAA,MAAM,CAACC,QAAD,EAAW;AACb,SAAKtB,UAAL,CAAgBuB,IAAhB,CAAqBD,QAArB;AACH;;AA1BwB;;AA4B7B3B,eAAe,CAAC6B,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAI/B,eAAV,EAA2BF,EAAE,CAACkC,QAAH,CAAYjC,EAAE,CAACkC,UAAf,CAA3B,CAAP;AAAgE,CAA7H;;AACAjC,eAAe,CAACkC,KAAhB,GAAwB,aAAcpC,EAAE,CAACqC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEpC,eAAT;AAA0BqC,EAAAA,OAAO,EAAErC,eAAe,CAAC6B,IAAnD;AAAyDS,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC","sourcesContent":["import { Category } from '../models/category-model';\r\nimport { Subject } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class CategoryService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.formData = new Category();\r\n        this.APIUrl = 'https://localhost:5001';\r\n        this._listeners = new Subject();\r\n    }\r\n    async getCatList(filterText, skipCount, maxResultCount, sorting) {\r\n        return this.http.get(this.APIUrl + '/Categories?FilterText=' + filterText + '&SkipCount=' +\r\n            skipCount + '&MaxReasultCount=' + maxResultCount + '&Sorting=' + sorting);\r\n    }\r\n    addCategory(cat) {\r\n        return this.http.post(this.APIUrl + '/Categories', cat, { responseType: 'text' });\r\n    }\r\n    deleteCategory(id) {\r\n        return this.http.delete(this.APIUrl + '/Categories/' + id, { responseType: 'text' });\r\n    }\r\n    updateCategory(cat) {\r\n        this.http.put(this.APIUrl + '/Categories/' + cat.Id, cat, { responseType: 'text' }).subscribe(res => {\r\n        });\r\n    }\r\n    listen() {\r\n        return this._listeners.asObservable();\r\n    }\r\n    filter(filterBy) {\r\n        this._listeners.next(filterBy);\r\n    }\r\n}\r\nCategoryService.ɵfac = function CategoryService_Factory(t) { return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient)); };\r\nCategoryService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CategoryService, factory: CategoryService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}